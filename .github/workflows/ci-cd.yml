name: CI/CD to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Create application-dev.yml
        if: env.APPLICATION_DEV != ''
        env:
          APPLICATION_DEV: ${{ secrets.APPLICATION_DEV }}
        run: echo "$APPLICATION_DEV" | base64 --decode > src/main/resources/application-dev.yml

      - name: Grant permission to Gradle
        run: chmod +x ./gradlew

      - name: Build JAR file
        run: ./gradlew build -x test

      - name: DockerHub Login & Push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t $DOCKER_USERNAME/receipie-api .
          docker push $DOCKER_USERNAME/receipie-api

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu"

      - name: SSH into EC2 and redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/receipie-api
            docker-compose down
            docker-compose up -d
            docker image prune -f

